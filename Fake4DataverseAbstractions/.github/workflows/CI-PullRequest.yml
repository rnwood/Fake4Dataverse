name: CI-PR

on:
  pull_request:
    branches: [ master, dev ]
    paths-ignore:
      - 'coverage/**'
      - '*.md'
      - '*.txt'

env: 
  dotnet-version: 3.1.201
  source-url: "https://nuget.pkg.github.com/${{github.repository_owner}}/index.json"

jobs:
  build-netcore:
    strategy:
      fail-fast: false 
      matrix: 
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{matrix.os}} 

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core for Actual Source
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
 
    - name: Disable local packages feed
      run: dotnet nuget disable source "local-packages"

    - name: Enable GitHub packages feed
      run: dotnet nuget enable source github
      
    - name: Build
      run: pwsh ./build.ps1
      env: 
        NUGET_USERNAME: DynamicsValue
        NUGET_TOKEN: ${{ secrets.PACKAGES_TOKEN }} 
  
  build-net-framework:
   
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core for Actual Source
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
 
    - name: Disable local packages feed
      run: dotnet nuget disable source "local-packages"

    - name: Enable GitHub packages feed
      run: dotnet nuget enable source github
      
    - name: Build
      run: pwsh ./build.ps1 -targetFramework 'net452'
      env: 
        NUGET_USERNAME: DynamicsValue
        NUGET_TOKEN: ${{ secrets.PACKAGES_TOKEN }} 

  sonar:
    needs: build-netcore
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core for Actual Source
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
 
    - name: Disable local packages feed
      run: dotnet nuget disable source "local-packages"

    - name: Enable GitHub packages feed
      run: dotnet nuget enable source github 

    - name: Quality Gate
      uses: DynamicsValue/dotnet-sonarscanner@v2.3
      with:
        buildCommand: dotnet build . --configuration Debug --framework netcoreapp3.1
        testCommand: dotnet test . --configuration Debug --framework netcoreapp3.1 --verbosity normal --collect:"XPlat code coverage" --settings tests/.runsettings --results-directory ./coverage
        projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
        projectName: fake-xrm-easy-abstractions
        sonarOrganisation: dynamicsvalue
        beginArguments: >
            /d:sonar.verbose="true"
            /d:sonar.qualitygate.wait="true"
            /d:sonar.cs.opencover.reportsPaths='"coverage/**/coverage.opencover.xml"'
            /d:sonar.coverage.exclusions='"tests/**/**"'
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        NUGET_USERNAME: DynamicsValue
        NUGET_TOKEN: ${{ secrets.PACKAGES_TOKEN }} 
    
    
    
    
